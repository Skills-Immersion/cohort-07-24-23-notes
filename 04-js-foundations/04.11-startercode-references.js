/* 
PRIMITIVE DATA TYPES- PASSED BY VALUE:
String
Number
Booleon
Undefined
Null



REFERENCE DATA TYPES- PASSED BY REFERENCE:
Arrays
Objects




*/


// WHEN A PRIMITIVE DATA TYPE IS ASSIGNED TO A VARIABLE, THAT VARIABLE GETS ITS OWN COPY
let num1 = 5;
let num2 = num1; //num2 is also set to 5,

//BUT NUM2 AND NUM1 ARE SEPARATE COPIES. SO AFFECTING NUM2 WILL NOT AFFECT NUM1




// WHEN A REFERENCE DATA TYPE IS ASSIGNED TO A VARIABLE, THAT VARIABLE JUST POINTS TO THAT DATA IN MEMORY (IT REFERENCES THAT DATA RATHER THAN MAKING A SEPARATE COPY)




// LETS SEE WHAT HAPPENS IN FUNCTIONS WITH PRIMITIVE TYPES AND REFERNCE TYPES
// const x = [1,2,3,4]

// function addToend(arr){
//   arr.push(5)
// }

// addToend(x);
// console.log(x)